# from samples

# same as the regular GNU, but with Mac support

WX_CONFIG ?= wx-config

# D compiler to use (DMD or GDC)
COMPILER = GDC

# D library to use (Phobos/Tango)
LIBRARY = Phobos

# wx platform to use (e.g. WXGTK)
PLATFORM = $(shell cat $(TOPDIR)/wxc/PLATFORM 2>/dev/null)

# wx char encoding (ANSI/UNICODE)
ENCODING = $(shell cat $(TOPDIR)/wxc/ENCODING 2>/dev/null)

CXX ?= $(shell $(WX_CONFIG) --cxx)
CXXFLAGS = -O2
CXXLIBS = -lstdc++ `test -r /usr/lib/libcc_dynamic.a && echo -lcc_dynamic`

ifeq ("$(COMPILER)","LDC")
DC ?= ldc
DFLAGS = -O
version=-version
output=-of$@
endif
ifeq ("$(COMPILER)","GDC")
DC ?= gdc
DFLAGS = -O2 -g
version=-fversion
output=-o $@
endif

ifeq ("$(LIBRARY)","Tango")
DFLAGS += $(version)=Tango
ifeq ("$(COMPILER)","GDC")
DFLAGS += $(version)=Posix
DLIBS += -lgtango
endif
endif

WXRELEASE = `$(WX_CONFIG) --release`
WXVERSION = `$(WX_CONFIG) --version`
WXFLAGS = `$(WX_CONFIG) --cxxflags`
WXLIBS = `$(WX_CONFIG) --libs`

WX_RELEASE_NODOT = $(shell echo "`$(WX_CONFIG) --release`" | sed -e 's/\.//')

ifeq ("$(STC)","1")
WXLIBS += `$(WX_CONFIG) --libs stc`
endif

#REZFLAGS = $(shell $(WX_CONFIG) --rezflags)
REZFLAGS = /Developer/Tools/Rez -d __DARWIN__ -t APPL Carbon.r -o

# workaround for wxAUI 0.9.2 linking to gdk_window_get_pointer directly on wxGTK...
ifeq ("$(PLATFORM)","WXGTK")
LDFLAGS += `pkg-config --libs gtk+-2.0`
endif

.cpp.o:
	$(CXX) $(WXFLAGS) $(CXXFLAGS) -c -o $@ $<

VERSION=$(version)=wx$(WX_RELEASE_NODOT) $(version)=__$(PLATFORM)__ $(version)=$(ENCODING)

%.o:%.d
	$(DC) $(VERSION) -I$(TOPDIR) $(DFLAGS) -c $(output) $<


BUNDLE_EXECUTABLE = $(shell basename $(TARGET))
BUNDLE_IDENTIFIER = $(shell basename $(TARGET) | tr 'A-Z' 'a-z')

BUNDLE_PLIST = $(TOPDIR)/Samples/Info.plist.in
BUNDLE_ICONS = $(TOPDIR)/Samples/wxmac.icns

all: $(TARGET).app

$(TARGET).app: $(TARGET)
	mkdir -p $@/Contents
	sed -e "s/IDENTIFIER/$(BUNDLE_IDENTIFIER)/" \
	    -e "s/EXECUTABLE/$(BUNDLE_EXECUTABLE)/" \
	    -e "s/VERSION/$(WXVERSION)/" \
	    $(BUNDLE_PLIST) >$@/Contents/Info.plist
	echo -n "APPL????" >$@/Contents/PkgInfo
	mkdir -p $@/Contents/MacOS
	ln -f $(TARGET) $@/Contents/MacOS/$(BUNDLE_EXECUTABLE)
	mkdir -p $@/Contents/Resources
	cp -f $(BUNDLE_ICONS) $@/Contents/Resources/
	-touch -r $< $@

ifeq ("$(COMPILER)","LDC")
# Note: "ldc" uses weird LDFLAGS syntax, so we have to wrap params first,
#       or it won't work with whatever we get back from "wx-config --libs"
GCCLIBS=$(WXLIBS) $(CXXLIBS)
LDCLIBS=$(shell for l in $(GCCLIBS); do echo -n "-L$$l "; done)
GCCFLAGS=$(LDFLAGS)
LDCFLAGS=$(shell for l in $(GCCFLAGS); do echo -n "-L$$l "; done)
$(TARGET) : $(OBJECTS)
	$(DC) $(output) $(OBJECTS) -L-L$(TOPDIR) -L-lwxd $(DLIBS) -L-L$(TOPDIR) -L-lwxc $(LDCLIBS) $(LDCFLAGS)
	-test "$(PLATFORM)" = "WXMAC" && $(REZFLAGS) $@
endif
ifeq ("$(COMPILER)","GDC")
$(TARGET) : $(OBJECTS)
	$(DC) $(output) $(OBJECTS) -L$(TOPDIR) -lwxd $(DLIBS) -lwxc $(WXLIBS) $(CXXLIBS) $(LDFLAGS)
	-test "$(PLATFORM)" = "WXMAC" && $(REZFLAGS) $@
endif

clean:
	-rm *.o
	-rm $(TARGET)
	-rm -r $(TARGET).app
